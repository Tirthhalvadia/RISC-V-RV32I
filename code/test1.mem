00900293 // addi x5, x0, 9       // x5 = 9
00800313 // addi x6, x0, 8       // x6 = 8
006283B3 // add  x7, x5, x6      // x7 = x5 + x6 = 17
40628433 // sub  x8, x5, x6      // x8 = x5 - x6 = 1
0062F4B3 // and  x9, x5, x6      // x9 = x5 & x6 = 8
00539513 // slli x10, x7, 5      // x10 = x7 << 5 = 17 << 5 = 544
0053D593 // srli x11, x7, 5      // x11 = x7 >> 5 = 17 >> 5 = 0
00732023 // sw   x7, 0(x6)       // Store x7 (17) to address in x6 (8)
00032603 // lw   x12, 0(x6)      // Load from address in x6 (8) to x12
00A60633 // add  x12, x12, x10   // x12 = x12 + x10 = 17 + 544 = 561
00B64663 // blt  x12, x11, 12    // Branch if x12 < x11 (shouldn't branch)
00160613 // addi x12, x12, 1     // x12 = x12 + 1 = 562
000306B7 // lui  x13, 48         // x13 = 48 << 12 = 196608
00D60633 // add  x12, x12, x13   // x12 = x12 + x13 = 562 + 196608 = 197170
00C32023 // sw   x12, 0(x6)      // Store x12 (197170) to address in x6 (8)
00032683 // lw   x13, 0(x6)      // Load from address in x6 (8) to x13
000bf897 // auipc x17, 191       // x17 = (PC + (191 << 12))